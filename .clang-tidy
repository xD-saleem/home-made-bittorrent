Checks: >
  -*,
  bugprone-*,
  boost-*
  clang-analyzer-*,
  misc-*,
  concurrency-*,
  clang-analyzer-*,
  cppcoreguidelines-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  -misc-non-private-member-variables-in-classes,
  -modernize-use-trailing-return-type,
  -readability-named-parameter,
  -readability-braces-around-statements,
  -readability-magic-numbers

# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.ClassCase,                value: lower_case }
  - { key: readability-identifier-naming.StructCase,               value: lower_case }
  - { key: readability-identifier-naming.TemplateParameterCase,    value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,             value: lower_case }
  - { key: readability-identifier-naming.VariableCase,             value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,      value: _          }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,    value: _          }
  - { key: readability-identifier-naming.MacroDefinitionCase,      value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,         value: lower_case }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberConstantCase,       value: lower_case }
  - { key: readability-identifier-naming.StaticConstantCase,       value: UPPER_CASE }
