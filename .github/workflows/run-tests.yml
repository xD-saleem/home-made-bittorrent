
name: Tests Runner

on: [push, pull_request]

jobs:
  linux-macos-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            vcpkg_triplet: x64-linux-release
          - os: macos-latest
            vcpkg_triplet: x64-osx-release
          - os: windows-2019
            vcpkg_triplet: x64-windows-release

    name: Test for on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Install dependencies via vcpkg
      - name: vcpkg build
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          manifest-dir: ${{ github.workspace }} # Directory containing vcpkg.json
          token: ${{ github.token }}  # GitHub token for authentication
          triplet: ${{ matrix.config.vcpkg_triplet }}
          cache-key: ${{ matrix.config.os }}
          revision: master
          github-binarycache: true

      # Step 3: Build the project using CMake and Make
      - name: build
        run: |
          cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=Release
          cd build
          make
          cd -
          echo "successfully built"

      # Step 4: Run the tests
      - name: Test
        run: make ci-tests

  # windows-test:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ['3.9', '3.13']
  #   defaults:
  #     run:
  #       shell: pwsh
  #   name: Test for ${{ matrix.python-version }} on windows-latest
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ilammy/msvc-dev-cmd@v1
  #     - uses: johnwason/vcpkg-action@v6
  #       with:
  #         manifest-dir: ${{ github.workspace }}
  #         triplet: x64-windows-static
  #         token: ${{ github.token }}
  #         github-binarycache: true
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         cache: 'pip'
  #     - name: Install build dependencies (pip)
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install --upgrade pip-tools ninja scikit_build_core pytest
  #         python -m piptools compile --resolver=backtracking -o requirements.txt pyproject.toml
  #         pip install -r requirements.txt
  #     - name: Build and install
  #       run: |
  #         python -m build -w
  #         Rename-Item -Path "gdstk" -NewName "gdstk_src"
  #         pip install --no-index --find-links dist gdstk
  #       env:
  #         CMAKE_GENERATOR: "Ninja"
  #         CMAKE_TOOLCHAIN_FILE: "${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
  #         SKBUILD_CMAKE_ARGS: "-DVCPKG_TARGET_TRIPLET=x64-windows-static;-DVCPKG_MANIFEST_MODE=OFF"
  #     - name: Test
  #       run: python -m pytest  
